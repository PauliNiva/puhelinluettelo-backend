{"version":3,"sources":["components/personForm.js","components/persons.js","components/filter.js","services/persons.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Person","persons","remove","name","number","onClick","Persons","filter","toLowerCase","includes","map","Filter","onFilterChange","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","success","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setSuccess","useEffect","personService","initialPersons","updateNumber","person","window","confirm","personWithNumberToChange","find","p","personWithChangedNumber","returnedPerson","setTimeout","catch","error","event","target","preventDefault","personObject","some","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b2ec463.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = (props) => (\n\n    <form onSubmit={props.addPerson}>\n        <div>\n            name: <input value={props.newName}\n            onChange={props.handleNameChange}/>\n        </div>\n        <div>\n            number: <input value={props.newNumber}\n            onChange={props.handleNumberChange}/>\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n      </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({persons, remove}) => (\n    <p>{persons.name} {persons.number} <button onClick={() =>\n        remove(persons)}>delete</button></p>\n)\n\nconst Persons = ({persons, filter, remove}) => {\n    const filteredPersons = persons.filter((persons)  => (\n        persons.name.toLowerCase().includes(filter.toLowerCase())\n    ))\n    return (\n        filteredPersons.map(persons =>\n        <Person key ={persons.name} persons ={persons} remove={remove} />)\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n    <p>\n        filter shown with <input\n                            value={props.filter}\n                            onChange={props.onFilterChange}\n                            />\n    </p>\n\n    )\n}\n\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  remove: remove\n}","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/personForm'\nimport Persons from './components/persons'\nimport Filter from './components/filter'\nimport personService from './services/persons'\n\nconst Notification = ({ message, success }) => {\n  if (message === null) {\n    return null\n  } else if (success === true) {\n    return (\n      <div className=\"success\">\n      {message}\n    </div>\n    )\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ success, setSuccess ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    const personInPhonebook = persons.some((p) => p.name === newName)\n    if (personInPhonebook) {\n      updateNumber(personObject)\n    } else {\n      personService\n          .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n          })\n          .catch(error => {\n            setSuccess(false)\n            setMessage(error.response.data.error)\n            setTimeout(() => {\n              setMessage(null)\n              setSuccess(null)\n            }, 5000)\n          })\n          setSuccess(true)\n          setMessage(`Added ${personObject.name}`)\n          setTimeout(() => {\n            setMessage(null)\n            setSuccess(null)\n          }, 5000)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const removePerson = (person) => {\n    const verify = window.confirm(`Delete ${person.name}?`)\n\n    if (verify) {\n      personService\n        .remove(person.id)\n        .then(() => {\n          setPersons(persons.filter(persons => persons.id !== person.id))\n          setSuccess(true)\n          setMessage(`Removed ${person.name}`)\n          setTimeout(() => {\n            setMessage(null)\n            setSuccess(null)\n          }, 5000)\n        })\n\n    }\n  }\n\n  const updateNumber = (person) => {\n    const verify =\n      window.confirm(`${person.name} is already in the phonebook.\n      Do you want to replace the old number with a new one?`)\n\n    if (verify) {\n      const personWithNumberToChange = persons.find(p => p.name === person.name)\n      const personWithChangedNumber = { ...personWithNumberToChange, number: newNumber}\n\n      personService\n        .update(personWithChangedNumber.id, personWithChangedNumber)\n        .then(returnedPerson => {\n          setPersons(persons.map(person =>\n            person.id !== personWithNumberToChange.id ? person: returnedPerson)\n          )\n          setSuccess(true)\n          setMessage(`Updated ${person.name}`)\n          setTimeout(() => {\n            setMessage(null)\n            setSuccess(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setSuccess(false)\n          setMessage(error.response.data.error)\n          setTimeout(() => {\n            setMessage(null)\n            setSuccess(null)\n          }, 5000)\n        })\n    }\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}\n                    success={success} />\n        <Filter\n          filter={filter}\n          onFilterChange={handleFilter} />\n      <h3>add a new</h3>\n        <PersonForm\n          addPerson={addPerson}\n          handleNameChange={handleNameChange}\n          handleNumberChange={handleNumberChange}\n          newName={newName}\n          newNumber={newNumber}\n        />\n      <h3>Numbers</h3>\n        <Persons\n          persons={persons}\n          filter={filter}\n          remove={removePerson}\n      />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}